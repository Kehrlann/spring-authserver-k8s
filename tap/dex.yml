#@ load("@ytt:data", "data")
#@
#@ domain = data.values.domain
#@ fqdn = "dex." + domain
#@
#!
#! Deployment for Dex, including service, ingress, root CA and Certificate
---
kind: Namespace
apiVersion: v1
metadata:
  name: dex
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex-config
  namespace: dex
  annotations:
    kapp.k14s.io/versioned: ""
data:
  #@yaml/text-templated-strings
  config.yml: |
    issuer: "https://(@= fqdn @)"
    storage:
      type: sqlite3
      config:
        file: /db/dex.db
    web:
      http: 0.0.0.0:5556
    staticClients:
      - id: appsso
        redirectURIs:
          - "https://authserver.demo.(@= domain @)/login/oauth2/code/openid-provider"
        name: 'Example App'
        secret: appsso-secret
        grant_types:
          - authorization_code
          - client_credentials
    enablePasswordDB: true
    staticPasswords:
      - email: "user@example.com"
        hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
        username: "jdoe"
        userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  namespace: dex
  labels:
    app: dex
spec:
  replicas: 1
  template:
    metadata:
      name: dex
      labels:
        app: dex
    spec:
      containers:
        - name: dex
          image: bitnami/dex:2.37.0
          imagePullPolicy: IfNotPresent
          command:
            - dex
          args:
            - serve
            - /config/config.yml
          volumeMounts:
            - mountPath: /config
              name: config
            #! emptyDir volume to create the sqlite db in
            - mountPath: /db
              name: db
          ports:
            - containerPort: 5556
              name: web
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: dex-config
        - name: db
          emptyDir: {}
      resources:
        limits:
          cpu: 0.5
          memory: 100M
  selector:
    matchLabels:
      app: dex
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  selector:
    app: dex
  ports:
    - port: 80
      targetPort: web
      name: web
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: dex
  namespace: dex
  annotations:
    kubernetes.io/ingress.class: contour
spec:
  tls:
    - secretName: dex-certificate
      hosts:
        - #@ fqdn
  rules:
    - host: #@ fqdn
      http:
        paths:
          - backend:
              service:
                name: dex
                port:
                  name: web
            pathType: Prefix
            path: "/"
#!---
#!kind: Secret
#!apiVersion: v1
#!metadata:
#!  name: dex-root-cert
#!  namespace: dex
#!stringData:
#!    tls.crt: |
#!        -----BEGIN CERTIFICATE-----
#!        MIIDADCCAeigAwIBAgIJAOZbQE/M3bBYMA0GCSqGSIb3DQEBCwUAMBUxEzARBgNV
#!        BAMMCm9wZW5zc2wtY2EwHhcNMjIwODI0MTIyMjIxWhcNMjcwODIzMTIyMjIxWjAV
#!        MRMwEQYDVQQDDApvcGVuc3NsLWNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
#!        CgKCAQEA6wANTc7owFrabdrNxDRd8BCN0oYmoP7ertN1RoMQov6V7COK+0uUb0p6
#!        VxWY9dGX3CgDY77Bp+v+fRuYAl1eaTHgzAG0qKk9VZ1NiolafzYV3ZLM2LnlaCvJ
#!        IR64PoZKVACVri7UEa1qOjtdi+SyMf62avqsLGN3d0+B77SJU1nDdxVT+vaqHw09
#!        9FJ7z7mI0Oh5HIEZYeskLM/rTitkshAis2e+vJt9uCH8jJ5sW1jPiV6T89n/v3pq
#!        RMZfzJEqQq11t/UKe9Ly081OFAFa9FLVGtAEm5VxG7XD+Dh29/jYOFD/qRjpUOX9
#!        4BK/TE0sTuxuY5vK1LaJ+97OLTVaGQIDAQABo1MwUTAdBgNVHQ4EFgQUw1VChxKV
#!        HPs0m1z30gXqley7SgswHwYDVR0jBBgwFoAUw1VChxKVHPs0m1z30gXqley7Sgsw
#!        DwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAwxJEZYZbSUYxigOx
#!        mmNA+AoIGlrPpX8vtzmQcHjEC6c2DsRBUFQ26t/tw/dyDYkU+szqULg6dq5krGIk
#!        +aucYu3HG9LGaT5SKcHE9cFjVBUhySQe6zxP2hhZeaxBtNXYjdoppvisLgE1vmWE
#!        ou3imQZNpB91AByr5vTb0TY9lCMCg0WhL72+ZkZR5Nw/shfZdN7weoP3y7ZUZ+eJ
#!        HSH2T1cc1ymxbqsCjbPpyDQf6t2NKjOFZ9A2/Xdcyu8N/5hA5uPPQG6AvlMvW8uj
#!        5V7RmDOwE6drfvoRz2Oz5LQF2QvrRi7pT9dOrRS77D7tZqvxEp+v6GsB7vzJm4ZW
#!        jS7VzA==
#!        -----END CERTIFICATE-----
#!    tls.key: |
#!      -----BEGIN RSA PRIVATE KEY-----
#!      MIIEogIBAAKCAQEA6wANTc7owFrabdrNxDRd8BCN0oYmoP7ertN1RoMQov6V7COK
#!      +0uUb0p6VxWY9dGX3CgDY77Bp+v+fRuYAl1eaTHgzAG0qKk9VZ1NiolafzYV3ZLM
#!      2LnlaCvJIR64PoZKVACVri7UEa1qOjtdi+SyMf62avqsLGN3d0+B77SJU1nDdxVT
#!      +vaqHw099FJ7z7mI0Oh5HIEZYeskLM/rTitkshAis2e+vJt9uCH8jJ5sW1jPiV6T
#!      89n/v3pqRMZfzJEqQq11t/UKe9Ly081OFAFa9FLVGtAEm5VxG7XD+Dh29/jYOFD/
#!      qRjpUOX94BK/TE0sTuxuY5vK1LaJ+97OLTVaGQIDAQABAoIBAAFgfrN2AucdoSoD
#!      njEIHYTKlAonvxIybBuaIZXILtDFrRs1Ghte1f/Q7+aSudK256zijyKGe5wARf11
#!      q+5XnbYAFNEdMXHLjBB0W3/0ThNwvbAOrCSY8j8qAoOvKmUzZDwZxMbAf32bBoRQ
#!      1Lt9G44vb+IwldGsw4ZvcNN2u1dBrINy/6q6gJQOU5Fpfmpufli4sTFwlKePM9Fe
#!      1Z5+skRCjmnFalmRR7WNPN52mcnldurGc1+KfqJUBT/IJhoOO4dZhQzlgcrGHDtn
#!      m1iym7aiQSpHWgBGfCR7VZK0rLWx/aDjTkDCl7t/WGoRpl5UG++jzaX6M6MmWf0+
#!      8e0xQAECgYEA+7r4PqDFqyQ1vPIwe9x4oRe6bLPfALLKLhwQzbGn2dO4Y271QYay
#!      mr29VDucnkevNFNjO0JQiKwqFdoTtIp48SlZGoZTShxsp2QZ9R6Q2E7yT9rI40Ox
#!      HXs7gOVdxOfpZovPM78n7IJPmGw6+w1eKT+mzu436Nzmab5NoeJzWikCgYEA7vxw
#!      Vt4UH/DnwS7CHVVQYunSGvzIs0HkCwRPyg74Xjsgobc6aI4oCRcYYIQG+Gl+Zbe8
#!      lLL1WTGLRzcZacnfKrX2wZVCoC929RfO2MF4PHwQp4+u8ZeRYaYo5GFbFdDtOmvi
#!      XolgqL8zydfMzu1IKzocw5rSzmZ8syzxuYij3nECgYBE2cWuM4D9J0E/daqHJi0k
#!      On413xiec0hTRj/eUroLHRpwr9eK3ZGaO00+bbOPoyGrmScp/SBT0WsNYQFEvx8H
#!      Lvz9AUJkodOiEQH8hiit0SH7b2bEqi4WVy9WOOXlxlyTPKgmiiEcUiP9F5UmN2jK
#!      tWslbAiEu26V+4P2RB6yyQKBgGrA8wGqxDycZToDRAzMXlNA9Wy+vHxuk4pkS6wL
#!      0eBt8x6p9Xpc/f9JhMcgUujGXwLa929JHZXRLtEKCN0bowe2Ltq8bP2XFkFXeDuU
#!      +Lu0A9CFu3UJ6pQ/IAccgg6VvFKbfIwUO8xFVMH2FvPcRJ+intS1pTMzzsJO8k+Z
#!      fPHRAoGAI5LntCGwKz3Hw2URRT0Sfzl/ImiFcDtXe0TEQDs2HZRTRh4Aw33XgJn9
#!      /AvOdTfrL5ajKvMOdiHLZB0zmzzdV4Z+WtE6hciD879WaoiTzQy6vVFQJ5jB4h9x
#!      0IImxtt+DANdp/zLRZq3EGDzuNaGsOUTKySLvsCDDPtKFlwt+tc=
#!      -----END RSA PRIVATE KEY-----
#!type: kubernetes.io/tls
#!---
#!kind: Issuer
#!apiVersion: cert-manager.io/v1
#!metadata:
#!  name: dex
#!  namespace: dex
#!spec:
#!  ca:
#!    secretName: dex-root-cert
---
kind: Certificate
apiVersion: cert-manager.io/v1
metadata:
  name: dex
  namespace: dex
spec:
  dnsNames:
    - #@ fqdn
  issuerRef:
    name: #@ data.values.issuer
    kind: ClusterIssuer
    group: cert-manager.io
  secretName: dex-certificate
